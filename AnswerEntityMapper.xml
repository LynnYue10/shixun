<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.aim.questionnaire.dao.AnswerEntityMapper">
  <resultMap id="BaseResultMap" type="com.aim.questionnaire.dao.entity.AnswerEntity">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="answername" jdbcType="VARCHAR" property="answerName" />
    <result column="password" jdbcType="VARCHAR" property="passWord" />
    <result column="groupname" jdbcType="VARCHAR" property="groupName" />
    <result column="username" jdbcType="VARCHAR" property="userName" />
    <result column="isdelete" jdbcType="VARCHAR" property="isDelete" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, answerName, passWord, groupName, userName, isDelete
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <include refid="Base_Column_List" />
    from user_info
    where id = #{id,jdbcType=VARCHAR}
    order by creation_date desc
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">

  </delete>
  <insert id="insert" parameterType="com.aim.questionnaire.dao.entity.UserEntity">

  </insert>
  <insert id="insertSelective" parameterType="com.aim.questionnaire.dao.entity.UserEntity">
  
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="com.aim.questionnaire.dao.entity.UserEntity">
   
  </update>
  <update id="updateByPrimaryKey" parameterType="com.aim.questionnaire.dao.entity.UserEntity">
 
  </update>
    <!--根据答者查找用户信息-->
<!--   <select id="selectUserInfo" parameterType="java.lang.String" resultType="com.aim.questionnaire.dao.entity.UserEntity">
    SELECT id,username,password,status
    FROM user_info
    WHERE username = #{username,jdbcType=VARCHAR} AND status = "1" AND password = #{password,jdbcType=VARCHAR}
    order by creation_date desc
  </select> -->
  
  
   <!--查询答者列表（模糊搜索）-->
  <select id="queryUserList" parameterType="java.lang.String" resultType="java.lang.String">
    SELECT groupName
    FROM answer_info
    WHERE answerName = #{name}
  </select>
  
 <!-- 获取群组下答者列表 --> 
 	<select id="queryQuestionnaireByProjectId" parameterType="map" resultType="java.util.Map">
 		SELECT id,answerName,passWord
 		FROM answer_info
 		WHERE groupName = #{groupName}
 	</select>
 	
<!-- 获取群组下答者列表 --> 
 	<select id="queryAnswerByGroupname" parameterType="map" resultType="java.util.Map">
 		SELECT id,answerName,passWord,groupname,username,isdelete,phoneNumber
 		FROM answer_info
 		WHERE groupName = #{groupName}
 	</select>
 	
 	 <!--查询答者列表显示-->
  <select id="queryAnswerList" parameterType="java.lang.String" resultType="java.util.Map">
    SELECT id,answername as answerName,groupname as groupName
  	FROM answer_info
    WHERE username=#{username,jdbcType=VARCHAR} AND answername like '%${answername}%' AND isdelete = "0"
  </select>
  
  <!--查询某一用户下所有答者答者列表显示-->
  <select id="queryAllAnswerList" parameterType="map" resultType="java.util.Map">
    SELECT id,answername as answerName,groupname as groupName,phoneNumber
  	FROM answer_info
    WHERE username=#{username,jdbcType=VARCHAR} 
  </select>
  
  
  <!--根据答者id删除答者-->
  <update id="deleteAnswerById" parameterType="java.lang.String">
  <!--"java.lang.String"-->
  update answer_info
  <set>
      isdelete = "1"
  </set>
  WHERE id = #{id,jdbcType=VARCHAR}
  </update>
  
  
  <!--查询答者-->
  <select id="ifhasanswer" parameterType="com.aim.questionnaire.dao.entity.AnswerEntity" resultType="map">
    SELECT id
  	FROM answer_info
    WHERE answername=#{answername,jdbcType=VARCHAR}
  </select>
  
  <!--新增答者-->
  <insert id="addAnswer" parameterType="com.aim.questionnaire.dao.entity.AnswerEntity">
    insert into answer_info(id,answername,password,groupname,username,isdelete) values
  (#{id},#{answername},#{password},#{groupname},#{username},#{isdelete})

  </insert>
  
  
  <!--查询答者-->
  <select id="findAnswerById" parameterType="java.lang.String" resultType="com.aim.questionnaire.dao.entity.AnswerEntity">
    SELECT id,
    		answername as answerName,
    		password,
    		groupname as groupName,
    		username as username,
    		isdelete	
  	FROM answer_info
    WHERE id=#{id,jdbcType=VARCHAR}
  </select>
  
  
  <!--修改答者-->
  <update id="modifyAnswer" parameterType="com.aim.questionnaire.dao.entity.AnswerEntity">
        update answer_info
    <set>
      <if test="answername != null and answername !=''">
        answername = #{answername},
      </if>
      <if test="groupname != null and groupname !=''">
        groupname= #{groupname},
      </if>
    </set>
  where id = #{id}
  </update>
  
  <!--查询delete答者列表显示-->
  <select id="queryDeletedAnswerList" parameterType="java.lang.String" resultType="java.util.Map">
    SELECT id,answername as answerName,groupname as groupName
  	FROM answer_info
    WHERE username=#{username,jdbcType=VARCHAR} AND answername like '%${answername}%' AND isdelete = "1"
  </select>
  
  <!--根据答者id彻底删除答者-->
  <delete id="finnaldeleteAnswerById" parameterType="java.lang.String">
  <!--"java.lang.String"-->
  DELETE
  FROM answer_info
  WHERE id = #{id,jdbcType=VARCHAR}
  </delete>
  
  <!--根据答者id恢复答者-->
  <update id="findbackAnswerById" parameterType="java.lang.String">
  <!--"java.lang.String"-->
  update answer_info
  <set>
      isdelete = "0"
  </set>
  WHERE id = #{id,jdbcType=VARCHAR}
  </update>
  
  
  <!--根据用户名查找用户信息-->
<!--   <select id="selectAllByName" parameterType="java.lang.String" resultType="com.aim.questionnaire.dao.entity.UserEntity">

  </select>

  根据用户名查找用户id
  <select id="selectIdByName"  parameterType="java.lang.String" resultType="java.lang.String">
  SELECT id
  FROM user_info
  WHERE username = #{user}
  </select>

  创建用户的基本信息
  <insert id="addUserInfo" parameterType="map">
    insert into user_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="roleId != null">
        role_id,
      </if>
      <if test="startTime != null">
        start_time,
      </if>
      <if test="stopTime != null">
        stop_time,
      </if>
        status,
      <if test="createdBy != null">
        created_by,
      </if>
      <if test="creationDate != null">
        creation_date,
      </if>
      <if test="lastUpdatedBy != null">
        last_updated_by,
      </if>
      <if test="lastUpdateDate != null">
        last_update_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null">
        #{roleId,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="stopTime != null">
        #{stopTime,jdbcType=TIMESTAMP},
      </if>
        1,
      <if test="createdBy != null">
        #{createdBy,jdbcType=CHAR},
      </if>
      <if test="creationDate != null">
        #{creationDate,jdbcType=TIMESTAMP},
      </if>
      <if test="lastUpdatedBy != null">
        #{lastUpdatedBy,jdbcType=CHAR},
      </if>
      <if test="lastUpdateDate != null">
        #{lastUpdateDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>

  编辑用户的基本信息
  <update id="modifyUserInfo" parameterType="map">

  </update>

  修改用户状态
  <update id="modifyUserStatus">

  </update>

  根据id查找用户全部信息
  <select id="selectUserInfoById" parameterType="com.aim.questionnaire.dao.entity.UserEntity" resultType="map">

  </select>

  查询用户的权限
  <select id="queryUserRole" resultType="java.lang.String">

  </select>

  查询用户截止时间
  <select id="selectAllEndTime" resultType="java.util.Map">

  </select>

  修改用户状态
  <update id="modifyUserInfoStatus" parameterType="map">

  </update>

  删除用户信息
  <delete id="deteleUserInfoById">

  </delete>

  查询用户密码
  <select id="queryUserPassword" parameterType="map" resultType="int">

  </select>

  根据用户id查询用户名
  <select id="selectUserNameInfoById" resultType="java.lang.String">

  </select>

  判断用户名是否存在
  <select id="queryExistUser" parameterType="map" resultType="java.lang.Integer">
    SELECT count(1)
    FROM user_info
    where username = #{username,jdbcType=VARCHAR}
    <if test="id != null">
      and id != #{id,jdbcType=VARCHAR}
    </if>
  </select>

  查询用户创建的项目
  <select id="queryProjectByUser" resultType="java.lang.Integer">

  </select>

  根据角色查询用户
  <select id="queryUserCountByRole" resultType="java.lang.Integer">

  </select> -->
</mapper>
